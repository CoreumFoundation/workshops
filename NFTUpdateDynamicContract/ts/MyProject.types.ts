/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Binary = string;
export interface InstantiateMsg {
  data?: Binary | null;
  description?: string | null;
  features?: number[] | null;
  name: string;
  royalty_rate?: string | null;
  symbol: string;
  uri?: string | null;
  uri_hash?: string | null;
}
export type ExecuteMsg = {
  mint_legacy: {
    data?: Binary | null;
    id: string;
    recipient?: string | null;
    uri?: string | null;
    uri_hash?: string | null;
  };
} | {
  mint_mutable: {
    data?: Binary | null;
    id: string;
    recipient?: string | null;
    uri?: string | null;
    uri_hash?: string | null;
  };
} | {
  mint_immutable: {
    data?: Binary | null;
    id: string;
    recipient?: string | null;
    uri?: string | null;
    uri_hash?: string | null;
  };
} | {
  modify_data: {
    data: Binary;
    id: string;
  };
} | {
  burn: {
    id: string;
  };
} | {
  freeze: {
    id: string;
  };
} | {
  unfreeze: {
    id: string;
  };
} | {
  class_freeze: {
    account: string;
  };
} | {
  class_unfreeze: {
    account: string;
  };
} | {
  add_to_whitelist: {
    account: string;
    id: string;
  };
} | {
  remove_from_whitelist: {
    account: string;
    id: string;
  };
} | {
  add_to_class_whitelist: {
    account: string;
  };
} | {
  remove_from_class_whitelist: {
    account: string;
  };
} | {
  send: {
    id: string;
    receiver: string;
  };
};
export type QueryMsg = {
  params: {};
} | {
  class: {};
} | {
  classes: {
    issuer: string;
  };
} | {
  frozen: {
    id: string;
  };
} | {
  class_frozen: {
    account: string;
  };
} | {
  class_frozen_accounts: {};
} | {
  whitelisted: {
    account: string;
    id: string;
  };
} | {
  whitelisted_accounts_for_nft: {
    id: string;
  };
} | {
  class_whitelisted_accounts: {};
} | {
  balance: {
    owner: string;
  };
} | {
  owner: {
    id: string;
  };
} | {
  supply: {};
} | {
  nft: {
    id: string;
  };
} | {
  nfts: {
    owner?: string | null;
  };
} | {
  class_nft: {};
} | {
  classes_nft: {};
} | {
  burnt_nft: {
    nft_id: string;
  };
} | {
  burnt_nfts_in_class: {};
};
export interface BalanceResponse {
  amount: number;
  [k: string]: unknown;
}
export interface BurntNFTResponse {
  burnt: boolean;
  [k: string]: unknown;
}
export interface BurntNFTsInClassResponse {
  nft_ids: string[];
  pagination: PageResponse;
  [k: string]: unknown;
}
export interface PageResponse {
  next_key?: string | null;
  total?: number | null;
  [k: string]: unknown;
}
export interface ClassResponse {
  class: Class;
  [k: string]: unknown;
}
export interface Class {
  data?: Binary | null;
  description?: string | null;
  id: string;
  name?: string | null;
  symbol?: string | null;
  uri?: string | null;
  uri_hash?: string | null;
  [k: string]: unknown;
}
export interface ClassFrozenResponse {
  frozen: boolean;
  [k: string]: unknown;
}
export interface ClassFrozenAccountsResponse {
  accounts: string[];
  pagination: PageResponse;
  [k: string]: unknown;
}
export interface ClassWhitelistedAccountsResponse {
  accounts: string[];
  pagination: PageResponse;
  [k: string]: unknown;
}
export interface ClassesResponse {
  classes: Class[];
  pagination: PageResponse;
  [k: string]: unknown;
}
export interface FrozenResponse {
  frozen: boolean;
  [k: string]: unknown;
}
export interface NFTResponse {
  nft: NFT;
  [k: string]: unknown;
}
export interface NFT {
  class_id: string;
  data?: Binary | null;
  id: string;
  uri?: string | null;
  uri_hash?: string | null;
  [k: string]: unknown;
}
export interface NFTsResponse {
  nfts: NFT[];
  pagination: PageResponse;
  [k: string]: unknown;
}
export interface OwnerResponse {
  owner: string;
  [k: string]: unknown;
}
export type Uint128 = string;
export interface ParamsResponse {
  params: Params;
  [k: string]: unknown;
}
export interface Params {
  mint_fee: Coin;
  [k: string]: unknown;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface SupplyResponse {
  amount: number;
  [k: string]: unknown;
}
export interface WhitelistedResponse {
  whitelisted: boolean;
  [k: string]: unknown;
}
export interface WhitelistedAccountsForNFTResponse {
  accounts: string[];
  pagination: PageResponse;
  [k: string]: unknown;
}